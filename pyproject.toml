[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "web-novel-downloader"
version = "0.0.1"
description = "A tool for downloading novels from web pages with configurable XPath expressions"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Book Downloader Team", email = "book-downloader@example.com"}
]
keywords = ["novel", "downloader", "scraper", "epub", "xpath", "web-scraping"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Internet :: WWW/HTTP :: Browsers",
    "Topic :: Text Processing :: Markup :: HTML",
    "Topic :: Utilities",
]
dependencies = [
    "pydoll-python",
    "lxml",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-asyncio>=0.18.0",
    "black>=21.0",
    "flake8>=3.9",
    "mypy>=0.910",
]

[project.scripts]
web-novel-downloader = "scripts.book_downloader:main"
web-novel-scraper = "scripts.scraper:main"

[project.urls]
Homepage = "https://github.com/your-username/book-downloader"
Repository = "https://github.com/your-username/book-downloader"
Issues = "https://github.com/your-username/book-downloader/issues"

[tool.setuptools.packages.find]
where = ["."]

[tool.setuptools.package-dir]
"" = "."

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "0.0.1"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"
